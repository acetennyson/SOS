{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport type { Html5QrcodeResult } from 'html5-qrcode';\nimport { Html5Qrcode } from 'html5-qrcode';\n\nimport type {\n  CapacitorBarcodeScannerPlugin,\n  CapacitorBarcodeScannerOptions,\n  CapacitorBarcodeScannerScanResult,\n} from './definitions';\nimport { CapacitorBarcodeScannerScanOrientation } from './definitions';\n\n/**\n * Implements OSBarcodePlugin to provide web functionality for barcode scanning.\n */\nexport class CapacitorBarcodeScannerWeb extends WebPlugin implements CapacitorBarcodeScannerPlugin {\n  /**\n   * Stops the barcode scanner and hides its UI.\n   * @private\n   * @returns {Promise<void>} A promise that resolves when the scanner has stopped and its UI is hidden.\n   */\n  private async stopAndHideScanner(): Promise<void> {\n    console.log((window as any).OSBarcodeWebScanner);\n    if ((window as any).OSBarcodeWebScanner) {\n      await (window as any).OSBarcodeWebScanner.stop();\n      (window as any).OSBarcodeWebScanner = null;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    document.getElementById('cap-os-barcode-scanner-container-dialog')!.style.display = 'none';\n  }\n\n  /**\n   * Builds the HTML elements necessary for the barcode scanner UI.\n   * This method checks if the scanner container exists before creating it to avoid duplicates.\n   * It also sets up the close button to stop and hide the scanner on click.\n   * @private\n   */\n  private buildScannerElement(): void {\n    if (document.getElementById('cap-os-barcode-scanner-container')) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      document.getElementById('cap-os-barcode-scanner-container')!.className = 'scanner-container-display';\n      return;\n    }\n    // Create and configure scanner container elements\n    const caposbarcodescannercontainer = document.body.appendChild(document.createElement('div'));\n    caposbarcodescannercontainer.id = 'cap-os-barcode-scanner-container';\n    const caposbarcodescannercontainerdialog = document.createElement('div');\n    caposbarcodescannercontainerdialog.id = 'cap-os-barcode-scanner-container-dialog';\n    caposbarcodescannercontainerdialog.className = 'scanner-dialog';\n\n    // Inner dialog elements including the close button and scanner view\n    const caposbarcodescannercontainerdialoginner = document.createElement('div');\n    caposbarcodescannercontainerdialoginner.className = 'scanner-dialog-inner';\n\n    const caposbarcodescannercontainerdialoginnerclose = document.createElement('span');\n    caposbarcodescannercontainerdialoginnerclose.className = 'close-button';\n    caposbarcodescannercontainerdialoginnerclose.innerHTML = '&times;';\n    caposbarcodescannercontainerdialoginner.appendChild(caposbarcodescannercontainerdialoginnerclose);\n\n    const caposbarcodescannercontainerdialoginnercontainerp = document.createElement('p');\n    caposbarcodescannercontainerdialoginnercontainerp.innerHTML = '&nbsp;';\n    caposbarcodescannercontainerdialoginner.appendChild(caposbarcodescannercontainerdialoginnercontainerp);\n\n    const caposbarcodescannercontainerdialoginnercontainer = document.createElement('div');\n    caposbarcodescannercontainerdialoginnercontainer.className = 'scanner-container-full-width';\n    caposbarcodescannercontainerdialoginnercontainer.id = 'cap-os-barcode-scanner-container-scanner';\n    caposbarcodescannercontainerdialoginner.appendChild(caposbarcodescannercontainerdialoginnercontainer);\n\n    caposbarcodescannercontainerdialog.appendChild(caposbarcodescannercontainerdialoginner);\n    caposbarcodescannercontainer.appendChild(caposbarcodescannercontainerdialog);\n\n    caposbarcodescannercontainerdialoginnerclose.onclick = this.stopAndHideScanner;\n  }\n\n  /**\n   * Initiates a barcode scan using the user's camera and HTML5 QR code scanner.\n   * Displays the scanner UI and waits for a scan to complete or fail.\n   * @param {OSBarcodeScanOptions} options Configuration options for the scan, including camera direction and UI preferences.\n   * @returns {Promise<OSBarcodeScanResult>} A promise that resolves with the scan result or rejects with an error.\n   */\n  async scanBarcode(options: CapacitorBarcodeScannerOptions): Promise<CapacitorBarcodeScannerScanResult> {\n    this.buildScannerElement();\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    document.getElementById('cap-os-barcode-scanner-container-dialog')!.style.display = 'block';\n    return new Promise((resolve, reject) => {\n      const param = {\n        facingMode: options.cameraDirection === 1 ? 'environment' : 'user',\n        hasScannerButton: false,\n        scanButton: options.scanButton === undefined ? false : options.scanButton,\n        showScanLine: false,\n        scanInstructions: options.scanInstructions ? options.scanInstructions : '',\n        orientation: options.scanOrientation\n          ? options.scanOrientation\n          : CapacitorBarcodeScannerScanOrientation.PORTRAIT,\n        showCameraSelection: options.web?.showCameraSelection ? options.web.showCameraSelection : false,\n        typeHint: options.hint === 17 ? undefined : options.hint,\n        scannerFPS: options.web?.scannerFPS ? options.web.scannerFPS : 50,\n      };\n\n      // Set up and start the scanner\n      const scannerElement = document.getElementById('cap-os-barcode-scanner-container-scanner');\n      if (!scannerElement) {\n        throw new Error('Scanner Element is required for web');\n      }\n\n      (window as any).OSBarcodeWebScanner = new Html5Qrcode(scannerElement.id);\n      const Html5QrcodeConfig = {\n        fps: param.scannerFPS,\n        qrbox: scannerElement.getBoundingClientRect().width * (9 / 16) - 10,\n        aspectRatio: 16 / 9,\n        videoConstraints: {\n          focusMode: 'continuous',\n          height: { min: 576, ideal: 1920 },\n          deviceId: undefined,\n          facingMode: undefined,\n        },\n      };\n\n      // Success and error callbacks for the scanner\n      const OSBarcodeWebScannerSuccessCallback = (decodedText: string, _decodedResult: Html5QrcodeResult) => {\n        this.stopAndHideScanner();\n        resolve({ ScanResult: decodedText });\n      };\n\n      const OSBarcodeWebScannerErrorCallback = (error: string) => {\n        if (error.indexOf('NotFoundException') === -1 && error.indexOf('No barcode or QR code detected') === -1) {\n          this.stopAndHideScanner();\n          console.error(`[Scanner Web Error] ${error}`);\n          reject(error);\n        }\n      };\n\n      (window as any).OSBarcodeWebScanner.start(\n        { facingMode: param.facingMode },\n        Html5QrcodeConfig,\n        OSBarcodeWebScannerSuccessCallback,\n        OSBarcodeWebScannerErrorCallback\n      );\n    });\n  }\n}\n"]}