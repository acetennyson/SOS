(function(o,i){typeof exports=="object"&&typeof module<"u"?i(exports,require("@capacitor/core")):typeof define=="function"&&define.amd?define(["exports","@capacitor/core"],i):(o=typeof globalThis<"u"?globalThis:o||self,i(o.CapacitorFileViewer={},o.capacitorExports))})(this,function(o,i){"use strict";function a(e){e.CapacitorUtils.Synapse=new Proxy({},{get(t,n){return new Proxy({},{get(b,r){return(f,P,c)=>{const p=e.Capacitor.Plugins[n];if(p===void 0){c(new Error(`Capacitor plugin ${n} not found`));return}if(typeof p[r]!="function"){c(new Error(`Method ${r} not found in Capacitor plugin ${n}`));return}(async()=>{try{const s=await p[r](f);P(s)}catch(s){c(s)}})()}}})}})}function u(e){e.CapacitorUtils.Synapse=new Proxy({},{get(t,n){return e.cordova.plugins[n]}})}function d(e=!1){window.CapacitorUtils=window.CapacitorUtils||{},window.Capacitor!==void 0&&!e?a(window):window.cordova!==void 0&&u(window)}const l=i.registerPlugin("FileViewer",{web:()=>Promise.resolve().then(()=>m).then(e=>new e.FileViewerWeb)});d();class w extends i.WebPlugin{openDocumentFromLocalPath(t){return Promise.reject("Not implemented in web")}openDocumentFromResources(t){return Promise.reject("Not implemented in web")}openDocumentFromUrl(t){return Promise.reject("Not implemented in web")}previewMediaContentFromLocalPath(t){return Promise.reject("Not implemented in web")}previewMediaContentFromResources(t){return Promise.reject("Not implemented in web")}previewMediaContentFromUrl(t){return Promise.reject("Not implemented in web")}}const m=Object.freeze(Object.defineProperty({__proto__:null,FileViewerWeb:w},Symbol.toStringTag,{value:"Module"}));o.FileViewer=l,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})});
